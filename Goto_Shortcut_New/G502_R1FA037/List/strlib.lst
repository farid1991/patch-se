##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    31/Oct/2019  22:49:23 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  E:\SE\Port\elf2vkp\Goto_Shortcut_New\strlib.c        #
#    Command line    =  E:\SE\Port\elf2vkp\Goto_Shortcut_New\strlib.c -D A2  #
#                       -D DB3150v1 -D G502_R1FA037 --preprocess=cl          #
#                       E:\SE\Port\elf2vkp\Goto_Shortcut_New\G502_R1FA037\Li #
#                       st\ -lC E:\SE\Port\elf2vkp\Goto_Shortcut_New\G502_R1 #
#                       FA037\List\ -lA E:\SE\Port\elf2vkp\Goto_Shortcut_New #
#                       \G502_R1FA037\List\ -o E:\SE\Port\elf2vkp\Goto_Short #
#                       cut_New\G502_R1FA037\Obj\ -z9 --debug --cpu_mode     #
#                       thumb --endian little --cpu ARM926EJ-S               #
#                       --stack_align 4 --interwork -e --enable_multibytes   #
#                       --fpu None --eec++ --preinclude                      #
#                       E:\SE\Port\elf2vkp\Goto_Shortcut_New\Target\G502_R1F #
#                       A037.h -I "E:\SE\Embedded Workbench 4.0              #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  E:\SE\Port\elf2vkp\Goto_Shortcut_New\G502_R1FA037\Li #
#                       st\strlib.lst                                        #
#    Object file     =  E:\SE\Port\elf2vkp\Goto_Shortcut_New\G502_R1FA037\Ob #
#                       j\strlib.r79                                         #
#                                                                            #
#                                                                            #
##############################################################################

E:\SE\Port\elf2vkp\Goto_Shortcut_New\strlib.c
      1          #include "..\\include\Types.h"
      2          #include "..\\include\Function.h"
      3          
      4          #include "main.h"
      5          #include "strlib.h"
      6          

   \                                 In segment CODE, align 4, keep-with-next
      7          int StringLength(wchar_t * wstr)
      8          {
   \                     ??StringLength:
   \   00000000   00B5               PUSH     {LR}
      9            if (wstr) return(wstrlen(wstr));
   \   00000002   0028               CMP      R0,#+0
   \   00000004   01D0               BEQ      ??StringLength_1
   \   00000006   ........           _BLF     wstrlen,??wstrlen??rT
     10            else return NULL;
   \                     ??StringLength_1:
   \   0000000A   00BD               POP      {PC}             ;; return
     11          }
     12          

   \                                 In segment CODE, align 4, keep-with-next
     13          void StringFree(wchar_t *wstr)
     14          {
   \                     ??StringFree:
   \   00000000   00B5               PUSH     {LR}
     15            if (wstr)
   \   00000002   0028               CMP      R0,#+0
   \   00000004   01D0               BEQ      ??StringFree_1
     16            {
     17              mfree(wstr);
   \   00000006   ........           _BLF     ??mfree,??mfree??rT
     18              wstr = NULL;
     19            }
     20          }
   \                     ??StringFree_1:
   \   0000000A   00BD               POP      {PC}             ;; return
     21          

   \                                 In segment CODE, align 4, keep-with-next
     22          wchar_t* StringAlloc(int lenght)
     23          {
   \                     ??StringAlloc:
   \   00000000   30B5               PUSH     {R4,R5,LR}
     24            int size = (lenght+1) * sizeof(wchar_t);
   \   00000002   401C               ADDS     R0,R0,#+1
   \   00000004   4400               LSLS     R4,R0,#+1
     25            wchar_t* wstr = (wchar_t*)malloc(size);
   \   00000006   2000               MOVS     R0,R4
   \   00000008   ........           _BLF     ??malloc,??malloc??rT
   \   0000000C   0500               MOVS     R5,R0
     26            memset(wstr, NULL, size);
   \   0000000E   2200               MOVS     R2,R4
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   ........           _BLF     memset,??memset??rT
     27            return(wstr);
   \   00000016   2800               MOVS     R0,R5
   \   00000018   30BD               POP      {R4,R5,PC}       ;; return
     28          }
     29          

   \                                 In segment CODE, align 4, keep-with-next
     30          void StringAllocEx(wchar_t **wstr, int size)
     31          {
   \                     ??StringAllocEx:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
     32            StringFree((*wstr));
   \   00000004   2068               LDR      R0,[R4, #+0]
   \   00000006   0D00               MOVS     R5,R1
   \   00000008   ........           BL       ??StringFree
     33            (*wstr) = StringAlloc(size);
   \   0000000C   2800               MOVS     R0,R5
   \   0000000E   ........           BL       ??StringAlloc
   \   00000012   2060               STR      R0,[R4, #+0]
     34          }
   \   00000014   30BD               POP      {R4,R5,PC}       ;; return
     35          

   \                                 In segment CODE, align 4, keep-with-next
     36          void StringReallocEx(wchar_t *src, wchar_t **dest, int size)
     37          {
   \                     ??StringReallocEx:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1600               MOVS     R6,R2
     38            StringAllocEx(dest, size);
   \   00000008   3100               MOVS     R1,R6
   \   0000000A   2800               MOVS     R0,R5
   \   0000000C   ........           BL       ??StringAllocEx
     39            wstrncpy((*dest), src, size);
   \   00000010   2868               LDR      R0,[R5, #+0]
   \   00000012   3200               MOVS     R2,R6
   \   00000014   2100               MOVS     R1,R4
   \   00000016   ........           _BLF     wstrncpy,??wstrncpy??rT
     40          }
   \   0000001A   70BD               POP      {R4-R6,PC}       ;; return
     41          

   \                                 In segment CODE, align 4, keep-with-next
     42          void StringRealloc(wchar_t *src, wchar_t **dest)
     43          {
   \                     ??StringRealloc:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
     44            StringReallocEx(src, dest, StringLength(src));
   \   00000006   ........           BL       ??StringLength
   \   0000000A   0200               MOVS     R2,R0
   \   0000000C   2900               MOVS     R1,R5
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   ........           BL       ??StringReallocEx
     45          }
   \   00000014   30BD               POP      {R4,R5,PC}       ;; return
     46          /*            
     47          void StringFilenameUnion(wchar_t **Filename, wchar_t *Path, wchar_t *Name)
     48          {
     49            StringAllocEx(Filename, StringLength(Path) + StringLength(Name) + sizeof(wchar_t)); // + L"/"
     50            wstrcpy((*Filename), Path);
     51            wstrcat((*Filename), L"/");
     52            wstrcat((*Filename), Name);
     53            *Filename = FSX_MakeFullPath(Path,Name);
     54          }
     55          */    

   \                                 In segment CODE, align 4, keep-with-next
     56          void StringExtractFileName(wchar_t *str, wchar_t **name)
     57          {
   \                     ??StringExtractFileName:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0C00               MOVS     R4,R1
     58            wchar_t* pos = wstrrchr(str, '/');
   \   00000004   2F21               MOVS     R1,#+47
   \   00000006   ........           _BLF     wstrrchr,??wstrrchr??rT
     59            *pos = NULL;
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0180               STRH     R1,[R0, #+0]
     60            StringRealloc(pos+1, name);
   \   0000000E   2100               MOVS     R1,R4
   \   00000010   801C               ADDS     R0,R0,#+2
   \   00000012   ........           BL       ??StringRealloc
     61          }
   \   00000016   10BD               POP      {R4,PC}          ;; return
     62          

   \                                 In segment CODE, align 4, keep-with-next
     63          int wstr2h(wchar_t * ws, int len)
     64          {
   \                     ??wstr2h:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0200               MOVS     R2,R0
     65            u16 w;
     66            int res=0;
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   09E0               B        ??wstr2h_1
     67            while(len--)
     68            {
     69              w=*ws++;
     70              if ((w>=0x30) && (w<0x40)) w-=0x30;
     71              else if((w>=0x41) && (w<0x47)) w-=0x37;
     72              else if((w>=0x61) && (w<0x67)) w-=0x57;
   \                     ??wstr2h_2:
   \   00000008   612B               CMP      R3,#+97
   \   0000000A   04D3               BCC      ??wstr2h_3
   \   0000000C   672B               CMP      R3,#+103
   \   0000000E   02D2               BCS      ??wstr2h_3
   \   00000010   573B               SUBS     R3,R3,#+87
   \                     ??wstr2h_4:
   \   00000012   1B04               LSLS     R3,R3,#+16
   \   00000014   1B0C               LSRS     R3,R3,#+16
     73              res<<=4;
     74              res|=w;
   \                     ??wstr2h_3:
   \   00000016   0401               LSLS     R4,R0,#+4
   \   00000018   1800               MOVS     R0,R3
   \   0000001A   2043               ORRS     R0,R0,R4
   \                     ??wstr2h_1:
   \   0000001C   0B00               MOVS     R3,R1
   \   0000001E   591E               SUBS     R1,R3,#+1
   \   00000020   002B               CMP      R3,#+0
   \   00000022   0DD0               BEQ      ??wstr2h_5
   \   00000024   1388               LDRH     R3,[R2, #+0]
   \   00000026   921C               ADDS     R2,R2,#+2
   \   00000028   302B               CMP      R3,#+48
   \   0000002A   03D3               BCC      ??wstr2h_6
   \   0000002C   402B               CMP      R3,#+64
   \   0000002E   01D2               BCS      ??wstr2h_6
   \   00000030   303B               SUBS     R3,R3,#+48
   \   00000032   EEE7               B.N      ??wstr2h_4
   \                     ??wstr2h_6:
   \   00000034   412B               CMP      R3,#+65
   \   00000036   E7D3               BCC      ??wstr2h_2
   \   00000038   472B               CMP      R3,#+71
   \   0000003A   E5D2               BCS      ??wstr2h_2
   \   0000003C   373B               SUBS     R3,R3,#+55
   \   0000003E   E8E7               B.N      ??wstr2h_4
     75            }
     76            return(res);
   \                     ??wstr2h_5:
   \   00000040   10BD               POP      {R4,PC}          ;; return
     77          }
     78          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     StringAlloc(int)                  12
     StringAllocEx(wchar_t **, int)    12
     StringExtractFileName(wchar_t *, wchar_t **)
                                        8
     StringFree(wchar_t *)              4
     StringLength(wchar_t *)            4
     StringRealloc(wchar_t *, wchar_t **)
                                       12
     StringReallocEx(wchar_t *, wchar_t **, int)
                                       16
     wstr2h(wchar_t *, int)             8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     StringLength(wchar_t *)          12
     StringFree(wchar_t *)            12
     StringAlloc(int)                 26
     StringAllocEx(wchar_t **, int)   22
     StringReallocEx(wchar_t *, wchar_t **, int)
                                      28
     StringRealloc(wchar_t *, wchar_t **)
                                      22
     StringExtractFileName(wchar_t *, wchar_t **)
                                      24
     wstr2h(wchar_t *, int)           66
      Others                         112

 
 324 bytes in segment CODE
 
 212 bytes of CODE memory (+ 112 bytes shared)

Errors: none
Warnings: none
